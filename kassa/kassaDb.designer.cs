#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace kassa
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="kassaApplicatie")]
	public partial class kassaDbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertklant(klant instance);
    partial void Updateklant(klant instance);
    partial void Deleteklant(klant instance);
    partial void Insertbestelling(bestelling instance);
    partial void Updatebestelling(bestelling instance);
    partial void Deletebestelling(bestelling instance);
    partial void InsertItemPerBestelling(ItemPerBestelling instance);
    partial void UpdateItemPerBestelling(ItemPerBestelling instance);
    partial void DeleteItemPerBestelling(ItemPerBestelling instance);
    partial void InsertproductType(productType instance);
    partial void UpdateproductType(productType instance);
    partial void DeleteproductType(productType instance);
    partial void Insertproduct(product instance);
    partial void Updateproduct(product instance);
    partial void Deleteproduct(product instance);
    #endregion
		
		public kassaDbDataContext() : 
				base(global::kassa.Properties.Settings.Default.kassaApplicatieConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public kassaDbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public kassaDbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public kassaDbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public kassaDbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<klant> klants
		{
			get
			{
				return this.GetTable<klant>();
			}
		}
		
		public System.Data.Linq.Table<bestelling> bestellings
		{
			get
			{
				return this.GetTable<bestelling>();
			}
		}
		
		public System.Data.Linq.Table<ItemPerBestelling> ItemPerBestellings
		{
			get
			{
				return this.GetTable<ItemPerBestelling>();
			}
		}
		
		public System.Data.Linq.Table<productType> productTypes
		{
			get
			{
				return this.GetTable<productType>();
			}
		}
		
		public System.Data.Linq.Table<product> products
		{
			get
			{
				return this.GetTable<product>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.klant")]
	public partial class klant : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _klantId;
		
		private string _telefoonnummer;
		
		private string _voornaam;
		
		private string _achternaam;
		
		private string _stad;
		
		private EntitySet<bestelling> _bestellings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnklantIdChanging(int value);
    partial void OnklantIdChanged();
    partial void OntelefoonnummerChanging(string value);
    partial void OntelefoonnummerChanged();
    partial void OnvoornaamChanging(string value);
    partial void OnvoornaamChanged();
    partial void OnachternaamChanging(string value);
    partial void OnachternaamChanged();
    partial void OnstadChanging(string value);
    partial void OnstadChanged();
    #endregion
		
		public klant()
		{
			this._bestellings = new EntitySet<bestelling>(new Action<bestelling>(this.attach_bestellings), new Action<bestelling>(this.detach_bestellings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_klantId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int klantId
		{
			get
			{
				return this._klantId;
			}
			set
			{
				if ((this._klantId != value))
				{
					this.OnklantIdChanging(value);
					this.SendPropertyChanging();
					this._klantId = value;
					this.SendPropertyChanged("klantId");
					this.OnklantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefoonnummer", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string telefoonnummer
		{
			get
			{
				return this._telefoonnummer;
			}
			set
			{
				if ((this._telefoonnummer != value))
				{
					this.OntelefoonnummerChanging(value);
					this.SendPropertyChanging();
					this._telefoonnummer = value;
					this.SendPropertyChanged("telefoonnummer");
					this.OntelefoonnummerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_voornaam", DbType="VarChar(50)")]
		public string voornaam
		{
			get
			{
				return this._voornaam;
			}
			set
			{
				if ((this._voornaam != value))
				{
					this.OnvoornaamChanging(value);
					this.SendPropertyChanging();
					this._voornaam = value;
					this.SendPropertyChanged("voornaam");
					this.OnvoornaamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_achternaam", DbType="VarChar(50)")]
		public string achternaam
		{
			get
			{
				return this._achternaam;
			}
			set
			{
				if ((this._achternaam != value))
				{
					this.OnachternaamChanging(value);
					this.SendPropertyChanging();
					this._achternaam = value;
					this.SendPropertyChanged("achternaam");
					this.OnachternaamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stad", DbType="VarChar(50)")]
		public string stad
		{
			get
			{
				return this._stad;
			}
			set
			{
				if ((this._stad != value))
				{
					this.OnstadChanging(value);
					this.SendPropertyChanging();
					this._stad = value;
					this.SendPropertyChanged("stad");
					this.OnstadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="klant_bestelling", Storage="_bestellings", ThisKey="klantId", OtherKey="klantId")]
		public EntitySet<bestelling> bestellings
		{
			get
			{
				return this._bestellings;
			}
			set
			{
				this._bestellings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_bestellings(bestelling entity)
		{
			this.SendPropertyChanging();
			entity.klant = this;
		}
		
		private void detach_bestellings(bestelling entity)
		{
			this.SendPropertyChanging();
			entity.klant = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bestelling")]
	public partial class bestelling : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _bestellingId;
		
		private string _datum;
		
		private System.Nullable<int> _klantId;
		
		private EntitySet<ItemPerBestelling> _ItemPerBestellings;
		
		private EntityRef<klant> _klant;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnbestellingIdChanging(int value);
    partial void OnbestellingIdChanged();
    partial void OndatumChanging(string value);
    partial void OndatumChanged();
    partial void OnklantIdChanging(System.Nullable<int> value);
    partial void OnklantIdChanged();
    #endregion
		
		public bestelling()
		{
			this._ItemPerBestellings = new EntitySet<ItemPerBestelling>(new Action<ItemPerBestelling>(this.attach_ItemPerBestellings), new Action<ItemPerBestelling>(this.detach_ItemPerBestellings));
			this._klant = default(EntityRef<klant>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bestellingId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int bestellingId
		{
			get
			{
				return this._bestellingId;
			}
			set
			{
				if ((this._bestellingId != value))
				{
					this.OnbestellingIdChanging(value);
					this.SendPropertyChanging();
					this._bestellingId = value;
					this.SendPropertyChanged("bestellingId");
					this.OnbestellingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datum", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string datum
		{
			get
			{
				return this._datum;
			}
			set
			{
				if ((this._datum != value))
				{
					this.OndatumChanging(value);
					this.SendPropertyChanging();
					this._datum = value;
					this.SendPropertyChanged("datum");
					this.OndatumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_klantId", DbType="Int")]
		public System.Nullable<int> klantId
		{
			get
			{
				return this._klantId;
			}
			set
			{
				if ((this._klantId != value))
				{
					if (this._klant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnklantIdChanging(value);
					this.SendPropertyChanging();
					this._klantId = value;
					this.SendPropertyChanged("klantId");
					this.OnklantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="bestelling_ItemPerBestelling", Storage="_ItemPerBestellings", ThisKey="bestellingId", OtherKey="bestellingId")]
		public EntitySet<ItemPerBestelling> ItemPerBestellings
		{
			get
			{
				return this._ItemPerBestellings;
			}
			set
			{
				this._ItemPerBestellings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="klant_bestelling", Storage="_klant", ThisKey="klantId", OtherKey="klantId", IsForeignKey=true)]
		public klant klant
		{
			get
			{
				return this._klant.Entity;
			}
			set
			{
				klant previousValue = this._klant.Entity;
				if (((previousValue != value) 
							|| (this._klant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._klant.Entity = null;
						previousValue.bestellings.Remove(this);
					}
					this._klant.Entity = value;
					if ((value != null))
					{
						value.bestellings.Add(this);
						this._klantId = value.klantId;
					}
					else
					{
						this._klantId = default(Nullable<int>);
					}
					this.SendPropertyChanged("klant");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ItemPerBestellings(ItemPerBestelling entity)
		{
			this.SendPropertyChanging();
			entity.bestelling = this;
		}
		
		private void detach_ItemPerBestellings(ItemPerBestelling entity)
		{
			this.SendPropertyChanging();
			entity.bestelling = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ItemPerBestelling")]
	public partial class ItemPerBestelling : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _itemId;
		
		private System.Nullable<int> _aantal;
		
		private System.Nullable<int> _productId;
		
		private System.Nullable<int> _bestellingId;
		
		private EntityRef<product> _product;
		
		private EntityRef<bestelling> _bestelling;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnitemIdChanging(int value);
    partial void OnitemIdChanged();
    partial void OnaantalChanging(System.Nullable<int> value);
    partial void OnaantalChanged();
    partial void OnproductIdChanging(System.Nullable<int> value);
    partial void OnproductIdChanged();
    partial void OnbestellingIdChanging(System.Nullable<int> value);
    partial void OnbestellingIdChanged();
    #endregion
		
		public ItemPerBestelling()
		{
			this._product = default(EntityRef<product>);
			this._bestelling = default(EntityRef<bestelling>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int itemId
		{
			get
			{
				return this._itemId;
			}
			set
			{
				if ((this._itemId != value))
				{
					this.OnitemIdChanging(value);
					this.SendPropertyChanging();
					this._itemId = value;
					this.SendPropertyChanged("itemId");
					this.OnitemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aantal", DbType="Int")]
		public System.Nullable<int> aantal
		{
			get
			{
				return this._aantal;
			}
			set
			{
				if ((this._aantal != value))
				{
					this.OnaantalChanging(value);
					this.SendPropertyChanging();
					this._aantal = value;
					this.SendPropertyChanged("aantal");
					this.OnaantalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productId", DbType="Int")]
		public System.Nullable<int> productId
		{
			get
			{
				return this._productId;
			}
			set
			{
				if ((this._productId != value))
				{
					if (this._product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIdChanging(value);
					this.SendPropertyChanging();
					this._productId = value;
					this.SendPropertyChanged("productId");
					this.OnproductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bestellingId", DbType="Int")]
		public System.Nullable<int> bestellingId
		{
			get
			{
				return this._bestellingId;
			}
			set
			{
				if ((this._bestellingId != value))
				{
					if (this._bestelling.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbestellingIdChanging(value);
					this.SendPropertyChanging();
					this._bestellingId = value;
					this.SendPropertyChanged("bestellingId");
					this.OnbestellingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_ItemPerBestelling", Storage="_product", ThisKey="productId", OtherKey="productId", IsForeignKey=true)]
		public product product
		{
			get
			{
				return this._product.Entity;
			}
			set
			{
				product previousValue = this._product.Entity;
				if (((previousValue != value) 
							|| (this._product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._product.Entity = null;
						previousValue.ItemPerBestellings.Remove(this);
					}
					this._product.Entity = value;
					if ((value != null))
					{
						value.ItemPerBestellings.Add(this);
						this._productId = value.productId;
					}
					else
					{
						this._productId = default(Nullable<int>);
					}
					this.SendPropertyChanged("product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="bestelling_ItemPerBestelling", Storage="_bestelling", ThisKey="bestellingId", OtherKey="bestellingId", IsForeignKey=true)]
		public bestelling bestelling
		{
			get
			{
				return this._bestelling.Entity;
			}
			set
			{
				bestelling previousValue = this._bestelling.Entity;
				if (((previousValue != value) 
							|| (this._bestelling.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._bestelling.Entity = null;
						previousValue.ItemPerBestellings.Remove(this);
					}
					this._bestelling.Entity = value;
					if ((value != null))
					{
						value.ItemPerBestellings.Add(this);
						this._bestellingId = value.bestellingId;
					}
					else
					{
						this._bestellingId = default(Nullable<int>);
					}
					this.SendPropertyChanged("bestelling");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.productType")]
	public partial class productType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _typeId;
		
		private string _omschrijving;
		
		private EntitySet<product> _products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntypeIdChanging(int value);
    partial void OntypeIdChanged();
    partial void OnomschrijvingChanging(string value);
    partial void OnomschrijvingChanged();
    #endregion
		
		public productType()
		{
			this._products = new EntitySet<product>(new Action<product>(this.attach_products), new Action<product>(this.detach_products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int typeId
		{
			get
			{
				return this._typeId;
			}
			set
			{
				if ((this._typeId != value))
				{
					this.OntypeIdChanging(value);
					this.SendPropertyChanging();
					this._typeId = value;
					this.SendPropertyChanged("typeId");
					this.OntypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_omschrijving", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string omschrijving
		{
			get
			{
				return this._omschrijving;
			}
			set
			{
				if ((this._omschrijving != value))
				{
					this.OnomschrijvingChanging(value);
					this.SendPropertyChanging();
					this._omschrijving = value;
					this.SendPropertyChanged("omschrijving");
					this.OnomschrijvingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="productType_product", Storage="_products", ThisKey="typeId", OtherKey="typeId")]
		public EntitySet<product> products
		{
			get
			{
				return this._products;
			}
			set
			{
				this._products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_products(product entity)
		{
			this.SendPropertyChanging();
			entity.productType = this;
		}
		
		private void detach_products(product entity)
		{
			this.SendPropertyChanging();
			entity.productType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.product")]
	public partial class product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _productId;
		
		private string _productNaam;
		
		private System.Nullable<decimal> _prijs;
		
		private System.Nullable<int> _typeId;
		
		private EntitySet<ItemPerBestelling> _ItemPerBestellings;
		
		private EntityRef<productType> _productType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnproductIdChanging(int value);
    partial void OnproductIdChanged();
    partial void OnproductNaamChanging(string value);
    partial void OnproductNaamChanged();
    partial void OnprijsChanging(System.Nullable<decimal> value);
    partial void OnprijsChanged();
    partial void OntypeIdChanging(System.Nullable<int> value);
    partial void OntypeIdChanged();
    #endregion
		
		public product()
		{
			this._ItemPerBestellings = new EntitySet<ItemPerBestelling>(new Action<ItemPerBestelling>(this.attach_ItemPerBestellings), new Action<ItemPerBestelling>(this.detach_ItemPerBestellings));
			this._productType = default(EntityRef<productType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int productId
		{
			get
			{
				return this._productId;
			}
			set
			{
				if ((this._productId != value))
				{
					this.OnproductIdChanging(value);
					this.SendPropertyChanging();
					this._productId = value;
					this.SendPropertyChanged("productId");
					this.OnproductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productNaam", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string productNaam
		{
			get
			{
				return this._productNaam;
			}
			set
			{
				if ((this._productNaam != value))
				{
					this.OnproductNaamChanging(value);
					this.SendPropertyChanging();
					this._productNaam = value;
					this.SendPropertyChanged("productNaam");
					this.OnproductNaamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prijs", DbType="Decimal(6,0)")]
		public System.Nullable<decimal> prijs
		{
			get
			{
				return this._prijs;
			}
			set
			{
				if ((this._prijs != value))
				{
					this.OnprijsChanging(value);
					this.SendPropertyChanging();
					this._prijs = value;
					this.SendPropertyChanged("prijs");
					this.OnprijsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeId", DbType="Int")]
		public System.Nullable<int> typeId
		{
			get
			{
				return this._typeId;
			}
			set
			{
				if ((this._typeId != value))
				{
					if (this._productType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntypeIdChanging(value);
					this.SendPropertyChanging();
					this._typeId = value;
					this.SendPropertyChanged("typeId");
					this.OntypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_ItemPerBestelling", Storage="_ItemPerBestellings", ThisKey="productId", OtherKey="productId")]
		public EntitySet<ItemPerBestelling> ItemPerBestellings
		{
			get
			{
				return this._ItemPerBestellings;
			}
			set
			{
				this._ItemPerBestellings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="productType_product", Storage="_productType", ThisKey="typeId", OtherKey="typeId", IsForeignKey=true)]
		public productType productType
		{
			get
			{
				return this._productType.Entity;
			}
			set
			{
				productType previousValue = this._productType.Entity;
				if (((previousValue != value) 
							|| (this._productType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._productType.Entity = null;
						previousValue.products.Remove(this);
					}
					this._productType.Entity = value;
					if ((value != null))
					{
						value.products.Add(this);
						this._typeId = value.typeId;
					}
					else
					{
						this._typeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("productType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ItemPerBestellings(ItemPerBestelling entity)
		{
			this.SendPropertyChanging();
			entity.product = this;
		}
		
		private void detach_ItemPerBestellings(ItemPerBestelling entity)
		{
			this.SendPropertyChanging();
			entity.product = null;
		}
	}
}
#pragma warning restore 1591
